// This patch causes the RCS to require LPLM when any one of these is installed: 
// CryoEngines, Kerbal Atomics, Rational Resources.

@PART[TeaKettleRCSBrick|TeaKettleRCSDiamond]:NEEDS[ClassicStock,!CommunityResourcePack]
{
	@MODULE[ModuleRCSFX]
	{
		@resourceName = Propellium
		@PROPELLANT
		{
			@name = Propellium
		}
		@atmosphereCurve
		{
			@key,0 = 0 1296
			@key,1 = 1 259
			@key,2 = 1.25 0.001
		}
	}
	
	// Let's go for 1.4x the Isp values of these fuels as given in RRNF
	IspVacLF = #$MODULE[ModuleRCSFX]/atmosphereCurve/key,0[1, ]$ // get vac Isp number; 800
	IspASLLF = #$MODULE[ModuleRCSFX]/atmosphereCurve/key,1[1, ]$ // get ASL Isp number; 160
	IspVacPLM = 1120 // 800
	IspASLPLM = 325 // - 71%
	IspVacRPT = 848 // 606
	IspASLRPT = 246 // - 71%
	IspVacH2O = 518 // 370
	IspASLH2O = 280 // - 46%
	
	// LiquidFuel
	// Calculate ASL thrust
	ThrustSLLF = #$IspASLLF$
	@ThrustSLLF /= #$IspVacLF$
	@ThrustSLLF *= #$MODULE[ModuleRCSFX]/thrusterPower$
	// Regex reduce value to 2dp
	@ThrustSLLF += 0.005
	@ThrustSLLF *= 100
	@ThrustSLLF = #$ThrustSLLF[0,.]$
	@ThrustSLLF /= 100
	// Calculate flameout pressure from Isp gradient: (Isp(Vac) / ( Isp(Vac) - Isp(ASL) ))
	AtmFlameoutLFTemp = #$IspVacLF$
	@AtmFlameoutLFTemp -= #$IspASLLF$
	AtmFlameoutLF = #$IspVacLF$
	@AtmFlameoutLF /= #$AtmFlameoutLFTemp$
	// Regex reduce value to 2dp
	@AtmFlameoutLF += 0.005
	@AtmFlameoutLF *= 100
	@AtmFlameoutLF = #$AtmFlameoutLF[0,.]$
	@AtmFlameoutLF /= 100
	
	// Propellium
	// Calculate ASL thrust
	ThrustSLPLM = #$IspASLPLM$
	@ThrustSLPLM /= #$IspVacPLM$
	@ThrustSLPLM *= #$MODULE[ModuleRCSFX]/thrusterPower$
	// Regex reduce value to 2dp
	@ThrustSLPLM += 0.005
	@ThrustSLPLM *= 100
	@ThrustSLPLM = #$ThrustSLPLM[0,.]$
	@ThrustSLPLM /= 100
	// Calculate flameout pressure from Isp gradient: (Isp(Vac) / ( Isp(Vac) - Isp(ASL) ))
	AtmFlameoutPLMTemp = #$IspVacPLM$
	@AtmFlameoutPLMTemp -= #$IspASLPLM$
	AtmFlameoutPLM = #$IspVacPLM$
	@AtmFlameoutPLM /= #$AtmFlameoutPLMTemp$
	// Regex reduce value to 2dp
	@AtmFlameoutPLM += 0.005
	@AtmFlameoutPLM *= 100
	@AtmFlameoutPLM = #$AtmFlameoutPLM[0,.]$
	@AtmFlameoutPLM /= 100
	
	// Raptium
	// Calculate ASL thrust
	ThrustSLRPT = #$IspASLRPT$
	@ThrustSLRPT /= #$IspVacRPT$
	@ThrustSLRPT *= #$MODULE[ModuleRCSFX]/thrusterPower$
	// Regex reduce value to 2dp
	@ThrustSLRPT += 0.005
	@ThrustSLRPT *= 100
	@ThrustSLRPT = #$ThrustSLRPT[0,.]$
	@ThrustSLRPT /= 100
	// Calculate flameout pressure from Isp gradient: (Isp(Vac) / ( Isp(Vac) - Isp(ASL) ))
	AtmFlameoutRPTTemp = #$IspVacRPT$
	@AtmFlameoutRPTTemp -= #$IspASLRPT$
	AtmFlameoutRPT = #$IspVacRPT$
	@AtmFlameoutRPT /= #$AtmFlameoutRPTTemp$
	// Regex reduce value to 2dp
	@AtmFlameoutRPT += 0.005
	@AtmFlameoutRPT *= 100
	@AtmFlameoutRPT = #$AtmFlameoutRPT[0,.]$
	@AtmFlameoutRPT /= 100
	
	// Water
	// Calculate ASL thrust
	ThrustSLH2O = #$IspASLH2O$
	@ThrustSLH2O /= #$IspVacH2O$
	@ThrustSLH2O *= #$MODULE[ModuleRCSFX]/thrusterPower$
	// Regex reduce value to 2dp
	@ThrustSLH2O += 0.005
	@ThrustSLH2O *= 100
	@ThrustSLH2O = #$ThrustSLH2O[0,.]$
	@ThrustSLH2O /= 100
	// Calculate flameout pressure from Isp gradient: (Isp(Vac) / ( Isp(Vac) - Isp(ASL) ))
	AtmFlameoutH2OTemp = #$IspVacH2O$
	@AtmFlameoutH2OTemp -= #$IspASLH2O$
	AtmFlameoutH2O = #$IspVacH2O$
	@AtmFlameoutH2O /= #$AtmFlameoutH2OTemp$
	// Regex reduce value to 2dp
	@AtmFlameoutH2O += 0.005
	@AtmFlameoutH2O *= 100
	@AtmFlameoutH2O = #$AtmFlameoutH2O[0,.]$
	@AtmFlameoutH2O /= 100
}
@PART[TeaKettleRCSBrick|TeaKettleRCSDiamond]:NEEDS[ClassicStock,!CommunityResourcePack]
{
	@description ^= :$: <br><#4FBBFF>RCS can accept other fuels.</color>
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = RCS
		switcherDescription = RCS Mode
		switcherDescriptionPlural = RCS Modes
		switchInFlight = True
		
		SUBTYPE
		{
			name = LF
			title = LiquidFuel
			primaryColor = ResourceColorLiquidFuel
			secondaryColor = ResourceColorLiquidFuel
			descriptionDetail = #The thruster consumes LiquidFuel.<br><b>Isp:</b> $/IspASLLF$ / $/IspVacLF$s <br><b>Thrust:</b> $/ThrustSLLF$ / $/MODULE[ModuleRCSFX]/thrusterPower$ kN<br><b>Flameout</b>: $/AtmFlameoutLF$ atm
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleRCSFX
				}
				DATA
				{
					thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$
					resourceName = LiquidFuel
					PROPELLANT
					{
						name = LiquidFuel
						ratio = 1
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					atmosphereCurve
					{
						key = #0 $/IspVacLF$
						key = #1 $/IspASLLF$
						key = #$/AtmFlameoutLF$ 0.001
					}
				}
			}
		}
		SUBTYPE
		{
			name = PLM
			title = Propellium
			primaryColor = Lightblue
			secondaryColor = Lightblue
			defaultSubtypePriority = 1
			descriptionDetail = #The thruster consumes Propellium.<br><b>Isp:</b> $/IspASLPLM$ / $/IspVacPLM$s <br><b>Thrust:</b> $/ThrustSLPLM$ / $/MODULE[ModuleRCSFX]/thrusterPower$ kN<br><b>Flameout</b>: $/AtmFlameoutPLM$ atm
		}
		// SUBTYPE
		// {
			// name = RPT
			// title = Raptium
			// primaryColor = PurpleyPink
			// secondaryColor = PurpleyPink
			// descriptionDetail = #The thruster consumes Raptium.<br><b>Isp:</b> $/IspASLRPT$ / $/IspVacRPT$s <br><b>Thrust:</b> $/ThrustSLRPT$ / $/MODULE[ModuleRCSFX]/thrusterPower$ kN<br><b>Flameout</b>: $/AtmFlameoutRPT$ atm
			// MODULE
			// {
				// IDENTIFIER
				// {
					// name = ModuleRCSFX
				// }
				// DATA
				// {
					// thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$
					// resourceName = Raptium
					// PROPELLANT
					// {
						// name = Raptium
						// ratio = 1
						// resourceFlowMode = STAGE_PRIORITY_FLOW
					// }
					// atmosphereCurve
					// {
						// key = #0 $/IspVacRPT$
						// key = #1 $/IspASLRPT$
						// key = #$/AtmFlameoutRPT$ 0.001
					// }
				// }
			// }
		// }
		SUBTYPE
		{
			name = H2O
			title = Water
			primaryColor = Ocean
			secondaryColor = Ocean
			descriptionDetail = #The thruster consumes Water.<br><b>Isp:</b> $/IspASLH2O$ / $/IspVacH2O$s <br><b>Thrust:</b> $/ThrustSLH2O$ / $/MODULE[ModuleRCSFX]/thrusterPower$ kN <br><b>Flameout</b>: $/AtmFlameoutH2O$ atm
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleRCSFX
				}
				DATA
				{
					thrusterPower = #$/MODULE[ModuleRCSFX]/thrusterPower$
					resourceName = Water
					PROPELLANT
					{
						name = Water
						ratio = 1
						resourceFlowMode = STAGE_PRIORITY_FLOW
					}
					atmosphereCurve
					{
						key = #0 $/IspVacH2O$
						key = #1 $/IspASLH2O$
						key = #$/AtmFlameoutH2O$ 0.001
					}
				}
			}
		}
	}
}

@PART[TeaKettleRCSBrick|TeaKettleRCSDiamond]:NEEDS[ClassicStock,!CommunityResourcePack]
{
	!IspVac* = done
	!IspASL* = done
	!Thrust* = done
	!AtmFlameout* = done
}